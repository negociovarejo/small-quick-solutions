/* * Copyright (c) 2018 VR Fortaleza. All rights reserved. * */
package br.com.vrfortaleza.upextension.wholesale.forms;

import br.com.vrfortaleza.upextension.utilities.NumberUtil;
import br.com.vrfortaleza.upextension.utilities.ViewUtil;
import br.com.vrfortaleza.upextension.wholesale.models.Product;
import br.com.vrfortaleza.upextension.wholesale.services.ProductService;
import br.com.vrfortaleza.upextension.views.custom.StripedTableCellRenderer;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author derickfelix
 */
public class LaunchSaleProductForm extends javax.swing.JInternalFrame {

    private final ProductService service;
    private final LaunchSaleForm launchSaleForm;

    private boolean edit;
    private List<Product> products;
    private int highlighted;
    private TableRowSorter<TableModel> rowSorter;
    private StringBuilder buffer;
    private Product product;

    /**
     * Creates new form LaunchSaleProductForm
     *
     * @param launchSaleForm the launchSaleForm which creates this form
     * @param product a predefined product, may be null.
     */
    public LaunchSaleProductForm(LaunchSaleForm launchSaleForm, Product product)
    {
        this.service = new ProductService();
        this.buffer = new StringBuilder();
        this.launchSaleForm = launchSaleForm;
        this.product = product;

        initComponents();
        customSettings();
    }

    private void customSettings()
    {
        this.products = service.all();
        scrollpane.setVisible(false);
        lblSearch.setVisible(false);
        // set table stripped
        DefaultTableCellRenderer leftRenderer = new StripedTableCellRenderer(JLabel.LEFT);
        searchTable.setDefaultRenderer(String.class, leftRenderer);
        searchTable.setShowGrid(false);
        searchTable.getTableHeader().setFont(new Font(Font.DIALOG, Font.PLAIN, 11));

        rowSorter = new TableRowSorter<>(searchTable.getModel());
        searchTable.setRowSorter(rowSorter);

        txtBarcode.setFocusable(false);
        btnExit.setFocusable(false);
        
        if (product != null) {
            this.edit = true;
            txtQtyWrapper.setText(String.valueOf(product.getQtyWrapper()));
            txtQuantity.setText(String.valueOf(product.getQuantity()));
            txtTotalPrice.setText(product.getTotalPrice());
            txtBarcode.setText(product.getBarcode());
            txtDescription.setText(product.getDescription());
            txtDiscount.setText(product.getDiscount());
            txtStock.setText(product.getStock());
            txtRetailPrice.setText(product.getRetailPrice());
            txtWholesalePrice.setText(product.getWholeSalePrice());
            
            txtQtyWrapper.setEnabled(true);
            txtQuantity.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        lblSearch = new javax.swing.JLabel();
        scrollpane = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        panelFields = new javax.swing.JPanel();
        lblBarcode = new javax.swing.JLabel();
        txtBarcode = new javax.swing.JTextField();
        lblDescription = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        lblStock = new javax.swing.JLabel();
        lblRetailPrice = new javax.swing.JLabel();
        lblWholesalePrice = new javax.swing.JLabel();
        lblDiscount = new javax.swing.JLabel();
        txtDescription = new javax.swing.JLabel();
        txtStock = new javax.swing.JLabel();
        txtRetailPrice = new javax.swing.JLabel();
        txtDiscount = new javax.swing.JLabel();
        txtWholesalePrice = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        txtQtyWrapper = new javax.swing.JTextField();
        lblQtyWrapper = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JLabel();
        lblWholesalePrice1 = new javax.swing.JLabel();
        paneButtons = new javax.swing.JPanel();
        btnExit = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setClosable(true);
        setTitle("Produto de Lançamento Venda");
        addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(null);

        lblSearch.setBackground(new java.awt.Color(184, 207, 229));
        lblSearch.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblSearch.setText("Pesquisa:");
        lblSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(1, 180, 234)));
        lblSearch.setOpaque(true);
        getContentPane().add(lblSearch);
        lblSearch.setBounds(39, 24, 210, 20);

        scrollpane.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N

        searchTable.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Código", "Descrição"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        searchTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        searchTable.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseReleased(java.awt.event.MouseEvent evt)
            {
                searchTableMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                searchTableMouseClicked(evt);
            }
        });
        searchTable.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                searchTableKeyPressed(evt);
            }
        });
        scrollpane.setViewportView(searchTable);
        if (searchTable.getColumnModel().getColumnCount() > 0)
        {
            searchTable.getColumnModel().getColumn(0).setResizable(false);
            searchTable.getColumnModel().getColumn(0).setPreferredWidth(15);
            searchTable.getColumnModel().getColumn(1).setResizable(false);
            searchTable.getColumnModel().getColumn(1).setPreferredWidth(240);
        }

        getContentPane().add(scrollpane);
        scrollpane.setBounds(32, 22, 440, 150);

        panelFields.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(184, 207, 229)));
        panelFields.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                panelFieldsMouseClicked(evt);
            }
        });

        lblBarcode.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblBarcode.setText("Código de Barras");

        txtBarcode.setEditable(false);
        txtBarcode.setBackground(new java.awt.Color(231, 248, 240));
        txtBarcode.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtBarcode.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBarcode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        txtBarcode.addCaretListener(new javax.swing.event.CaretListener()
        {
            public void caretUpdate(javax.swing.event.CaretEvent evt)
            {
                txtBarcodeCaretUpdate(evt);
            }
        });
        txtBarcode.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                txtBarcodeMouseClicked(evt);
            }
        });
        txtBarcode.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtBarcodeActionPerformed(evt);
            }
        });

        lblDescription.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblDescription.setText("Descrição");

        lblQuantity.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblQuantity.setText("Quantidade");

        lblStock.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblStock.setText("Estoque");

        lblRetailPrice.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblRetailPrice.setText("Preço");

        lblWholesalePrice.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblWholesalePrice.setText("Preço Atacado");

        lblDiscount.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblDiscount.setText("% Desconto");

        txtDescription.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtDescription.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtDescription.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(184, 207, 229)), javax.swing.BorderFactory.createEmptyBorder(1, 4, 1, 4)));

        txtStock.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtStock.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtStock.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(184, 207, 229)), javax.swing.BorderFactory.createEmptyBorder(1, 4, 1, 4)));

        txtRetailPrice.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtRetailPrice.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtRetailPrice.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(184, 207, 229)), javax.swing.BorderFactory.createEmptyBorder(1, 4, 1, 4)));

        txtDiscount.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtDiscount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtDiscount.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(184, 207, 229)), javax.swing.BorderFactory.createEmptyBorder(1, 4, 1, 4)));

        txtWholesalePrice.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtWholesalePrice.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtWholesalePrice.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(184, 207, 229)), javax.swing.BorderFactory.createEmptyBorder(1, 4, 1, 4)));

        txtQuantity.setBackground(new java.awt.Color(231, 248, 240));
        txtQuantity.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtQuantity.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQuantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        txtQuantity.setEnabled(false);
        txtQuantity.addCaretListener(new javax.swing.event.CaretListener()
        {
            public void caretUpdate(javax.swing.event.CaretEvent evt)
            {
                txtQuantityCaretUpdate(evt);
            }
        });
        txtQuantity.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                txtQuantityFocusLost(evt);
            }
        });
        txtQuantity.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                txtQuantityMouseClicked(evt);
            }
        });
        txtQuantity.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtQuantityActionPerformed(evt);
            }
        });

        txtQtyWrapper.setBackground(new java.awt.Color(231, 248, 240));
        txtQtyWrapper.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtQtyWrapper.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQtyWrapper.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        txtQtyWrapper.setEnabled(false);
        txtQtyWrapper.addCaretListener(new javax.swing.event.CaretListener()
        {
            public void caretUpdate(javax.swing.event.CaretEvent evt)
            {
                txtQtyWrapperCaretUpdate(evt);
            }
        });
        txtQtyWrapper.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                txtQtyWrapperFocusLost(evt);
            }
        });
        txtQtyWrapper.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                txtQtyWrapperMouseClicked(evt);
            }
        });
        txtQtyWrapper.addInputMethodListener(new java.awt.event.InputMethodListener()
        {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt)
            {
                txtQtyWrapperInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt)
            {
            }
        });
        txtQtyWrapper.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtQtyWrapperActionPerformed(evt);
            }
        });
        txtQtyWrapper.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                txtQtyWrapperKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                txtQtyWrapperKeyPressed(evt);
            }
        });

        lblQtyWrapper.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblQtyWrapper.setText("Qtd. Emb.");

        txtTotalPrice.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtTotalPrice.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtTotalPrice.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(184, 207, 229)), javax.swing.BorderFactory.createEmptyBorder(1, 4, 1, 4)));

        lblWholesalePrice1.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblWholesalePrice1.setText("Total");

        javax.swing.GroupLayout panelFieldsLayout = new javax.swing.GroupLayout(panelFields);
        panelFields.setLayout(panelFieldsLayout);
        panelFieldsLayout.setHorizontalGroup(
            panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFieldsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFieldsLayout.createSequentialGroup()
                        .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBarcode)
                            .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFieldsLayout.createSequentialGroup()
                                .addComponent(lblDescription)
                                .addGap(0, 470, Short.MAX_VALUE))
                            .addComponent(txtDescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelFieldsLayout.createSequentialGroup()
                        .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblQtyWrapper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtQtyWrapper, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(txtQuantity))
                        .addGap(6, 6, 6)
                        .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStock, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblRetailPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(txtRetailPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtWholesalePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWholesalePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWholesalePrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        panelFieldsLayout.setVerticalGroup(
            panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFieldsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelFieldsLayout.createSequentialGroup()
                        .addComponent(lblWholesalePrice1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFieldsLayout.createSequentialGroup()
                        .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBarcode)
                            .addComponent(lblDescription))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFieldsLayout.createSequentialGroup()
                                .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblQuantity)
                                    .addComponent(lblStock)
                                    .addComponent(lblRetailPrice)
                                    .addComponent(lblDiscount))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRetailPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelFieldsLayout.createSequentialGroup()
                                .addComponent(lblQtyWrapper)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQtyWrapper, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelFieldsLayout.createSequentialGroup()
                                .addComponent(lblWholesalePrice)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtWholesalePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(panelFields);
        panelFields.setBounds(12, 12, 680, 123);

        paneButtons.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(184, 207, 229)));

        btnExit.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/vrfortaleza/upextension/resources/close-button-icon.png"))); // NOI18N
        btnExit.setText("Sair");
        btnExit.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnExitActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/vrfortaleza/upextension/resources/save-icon.png"))); // NOI18N
        btnSave.setText("Salvar");
        btnSave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneButtonsLayout = new javax.swing.GroupLayout(paneButtons);
        paneButtons.setLayout(paneButtonsLayout);
        paneButtonsLayout.setHorizontalGroup(
            paneButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneButtonsLayout.createSequentialGroup()
                .addContainerGap(472, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        paneButtonsLayout.setVerticalGroup(
            paneButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnExit)
                .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(paneButtons);
        paneButtons.setBounds(12, 141, 680, 30);

        setBounds(320, 130, 711, 208);
    }// </editor-fold>//GEN-END:initComponents

    private void txtBarcodeCaretUpdate(javax.swing.event.CaretEvent evt)//GEN-FIRST:event_txtBarcodeCaretUpdate
    {//GEN-HEADEREND:event_txtBarcodeCaretUpdate

    }//GEN-LAST:event_txtBarcodeCaretUpdate

    private void txtBarcodeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtBarcodeActionPerformed
    {//GEN-HEADEREND:event_txtBarcodeActionPerformed

    }//GEN-LAST:event_txtBarcodeActionPerformed

    private void txtBarcodeMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_txtBarcodeMouseClicked
    {//GEN-HEADEREND:event_txtBarcodeMouseClicked
        scrollpane.setVisible(true);
        buffer = new StringBuilder();
        searchTable.requestFocus();
        fillTable();
    }//GEN-LAST:event_txtBarcodeMouseClicked

    private void searchTableMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_searchTableMouseClicked
    {//GEN-HEADEREND:event_searchTableMouseClicked

    }//GEN-LAST:event_searchTableMouseClicked

    private void searchTableMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_searchTableMouseReleased
    {//GEN-HEADEREND:event_searchTableMouseReleased
        int selectedRow = searchTable.getSelectedRow();
        if (highlighted == selectedRow) {
            showSelectedProduct(highlighted);
        }
        highlighted = selectedRow;
    }//GEN-LAST:event_searchTableMouseReleased

    private void searchTableKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_searchTableKeyPressed
    {//GEN-HEADEREND:event_searchTableKeyPressed
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_ENTER:
                showSelectedProduct(searchTable.getSelectedRow());
                break;
            default:
                buffer = ViewUtil.performTableQuery(lblSearch, buffer, searchTable, rowSorter, evt);
        }

    }//GEN-LAST:event_searchTableKeyPressed

    private void panelFieldsMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_panelFieldsMouseClicked
    {//GEN-HEADEREND:event_panelFieldsMouseClicked
        lblSearch.setVisible(false);
        scrollpane.setVisible(false);
    }//GEN-LAST:event_panelFieldsMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_formMouseClicked
    {//GEN-HEADEREND:event_formMouseClicked
        lblSearch.setVisible(false);
        scrollpane.setVisible(false);
    }//GEN-LAST:event_formMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSaveActionPerformed
    {//GEN-HEADEREND:event_btnSaveActionPerformed
        if (!txtQtyWrapper.getText().isEmpty() && !txtQuantity.getText().isEmpty()) {
            product.setQtyWrapper(Integer.parseInt(txtQtyWrapper.getText()));
            product.setQuantity(Integer.parseInt(txtQuantity.getText()));
            product.setTotalPrice(txtTotalPrice.getText());

            if (edit) {
                launchSaleForm.removeProduct();
            }
            launchSaleForm.addProduct(product);
            LaunchSaleProductForm form = new LaunchSaleProductForm(launchSaleForm, null);
            launchSaleForm.getDesktopPane().add(form);
            form.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Campo(s) preenchido(s) incorretamente!", "Produto de Lançamento Venda", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnExitActionPerformed
    {//GEN-HEADEREND:event_btnExitActionPerformed
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void txtQuantityCaretUpdate(javax.swing.event.CaretEvent evt)//GEN-FIRST:event_txtQuantityCaretUpdate
    {//GEN-HEADEREND:event_txtQuantityCaretUpdate
    }//GEN-LAST:event_txtQuantityCaretUpdate

    private void txtQuantityMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_txtQuantityMouseClicked
    {//GEN-HEADEREND:event_txtQuantityMouseClicked
    }//GEN-LAST:event_txtQuantityMouseClicked

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtQuantityActionPerformed
    {//GEN-HEADEREND:event_txtQuantityActionPerformed
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void txtQtyWrapperCaretUpdate(javax.swing.event.CaretEvent evt)//GEN-FIRST:event_txtQtyWrapperCaretUpdate
    {//GEN-HEADEREND:event_txtQtyWrapperCaretUpdate
    }//GEN-LAST:event_txtQtyWrapperCaretUpdate

    private void txtQtyWrapperMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_txtQtyWrapperMouseClicked
    {//GEN-HEADEREND:event_txtQtyWrapperMouseClicked
    }//GEN-LAST:event_txtQtyWrapperMouseClicked

    private void txtQtyWrapperActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtQtyWrapperActionPerformed
    {//GEN-HEADEREND:event_txtQtyWrapperActionPerformed
    }//GEN-LAST:event_txtQtyWrapperActionPerformed

    private void txtQtyWrapperInputMethodTextChanged(java.awt.event.InputMethodEvent evt)//GEN-FIRST:event_txtQtyWrapperInputMethodTextChanged
    {//GEN-HEADEREND:event_txtQtyWrapperInputMethodTextChanged
    }//GEN-LAST:event_txtQtyWrapperInputMethodTextChanged

    private void txtQtyWrapperKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtQtyWrapperKeyPressed
    {//GEN-HEADEREND:event_txtQtyWrapperKeyPressed
    }//GEN-LAST:event_txtQtyWrapperKeyPressed

    private void txtQtyWrapperKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtQtyWrapperKeyTyped
    {//GEN-HEADEREND:event_txtQtyWrapperKeyTyped
    }//GEN-LAST:event_txtQtyWrapperKeyTyped

    private void txtQtyWrapperFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_txtQtyWrapperFocusLost
    {//GEN-HEADEREND:event_txtQtyWrapperFocusLost
        numberInput(txtQtyWrapper);
        calculateTotalPrice();
    }//GEN-LAST:event_txtQtyWrapperFocusLost

    private void txtQuantityFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_txtQuantityFocusLost
    {//GEN-HEADEREND:event_txtQuantityFocusLost
        numberInput(txtQuantity);
        calculateTotalPrice();
    }//GEN-LAST:event_txtQuantityFocusLost

    private void calculateTotalPrice()
    {
        double qty = NumberUtil.toDouble(txtQuantity.getText());
        double qtyWrapper = NumberUtil.toDouble(txtQtyWrapper.getText());
        double wholeSale = NumberUtil.toDouble(txtWholesalePrice.getText());

        double totalPrice = qty * qtyWrapper * wholeSale;

        txtTotalPrice.setText(NumberUtil.convertCurrencyFormat(totalPrice));
    }

    private void numberInput(JTextField txt)
    {
        StringBuilder builder = new StringBuilder();
        char[] items = txt.getText().toCharArray();

        for (char item : items) {
            if (Character.isDigit(item)) {
                builder.append(item);
            }
        }

        txt.setText(builder.toString());
    }

    private void showSelectedProduct(int selectedRow)
    {
        lblSearch.setVisible(false);
        scrollpane.setVisible(false);

        product = ViewUtil.getEntityFromTable(selectedRow, searchTable, products);

        if (product != null) {

            if (launchSaleForm.contains(product) && !edit) {
                JOptionPane.showMessageDialog(this, "Produto já cadastrado!", "Produto de Lançamento Venda", JOptionPane.WARNING_MESSAGE);
                return;
            }

            txtQtyWrapper.setText("1");
            txtTotalPrice.setText(product.getWholeSalePrice());
            txtBarcode.setText(product.getBarcode());
            txtDescription.setText(product.getDescription());
            txtDiscount.setText(product.getDiscount());
            txtStock.setText(product.getStock());
            txtRetailPrice.setText(product.getRetailPrice());
            txtWholesalePrice.setText(product.getWholeSalePrice());

            txtQtyWrapper.setEnabled(true);
            txtQuantity.setEnabled(true);
            txtQuantity.requestFocus();
        } else {
            JOptionPane.showMessageDialog(this, "O produto informado não foi encontrado!", "Produto de Lançamento Venda", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void fillTable()
    {
        DefaultTableModel model = (DefaultTableModel) searchTable.getModel();

        if (!model.getDataVector().isEmpty()) {
            model.getDataVector().removeAllElements();
        }

        for (Product wp : products) {
            String[] row = new String[2];
            row[0] = NumberUtil.fixedDigits(14, String.valueOf(wp.getId()));
            row[1] = wp.getDescription();
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lblBarcode;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblDiscount;
    private javax.swing.JLabel lblQtyWrapper;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblRetailPrice;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblWholesalePrice;
    private javax.swing.JLabel lblWholesalePrice1;
    private javax.swing.JPanel paneButtons;
    private javax.swing.JPanel panelFields;
    private javax.swing.JScrollPane scrollpane;
    private javax.swing.JTable searchTable;
    private javax.swing.JTextField txtBarcode;
    private javax.swing.JLabel txtDescription;
    private javax.swing.JLabel txtDiscount;
    private javax.swing.JTextField txtQtyWrapper;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JLabel txtRetailPrice;
    private javax.swing.JLabel txtStock;
    private javax.swing.JLabel txtTotalPrice;
    private javax.swing.JLabel txtWholesalePrice;
    // End of variables declaration//GEN-END:variables
}
