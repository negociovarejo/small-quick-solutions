/* * Copyright (c) 2018 VR Fortaleza. All rights reserved. * */
package br.com.vrfortaleza.upextension.wholesale.forms;

import br.com.vrfortaleza.upextension.utilities.DateUtil;
import br.com.vrfortaleza.upextension.utilities.NumberUtil;
import br.com.vrfortaleza.upextension.utilities.ViewUtil;
import br.com.vrfortaleza.upextension.views.MainForm;
import br.com.vrfortaleza.upextension.views.custom.StripedTableCellRenderer;
import br.com.vrfortaleza.upextension.wholesale.models.Client;
import br.com.vrfortaleza.upextension.wholesale.models.Product;
import br.com.vrfortaleza.upextension.wholesale.models.Seller;
import br.com.vrfortaleza.upextension.wholesale.services.ClientService;
import br.com.vrfortaleza.upextension.wholesale.services.SellerService;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author derickfelix
 */
public class LaunchSaleForm extends javax.swing.JInternalFrame {

    private final SellerService sellerService;
    private final ClientService clientService;
    private final MainForm parent;

    private Date emission;

    private List<Seller> sellers;
    private List<Client> clients;
    private List<Product> products;

    private int lastSelectedSeller;
    private int lastSelectedClient;
    private int lastSelectedProduct;

    private Seller selectedSeller;
    private Client selectedClient;

//    private TableRowSorter<TableModel> sellerRowSorter;
//    private TableRowSorter<TableModel> clientRowSorter;
    /**
     * Creates new form LaunchSalesForm
     *
     * @param parent the parent of this form
     */
    public LaunchSaleForm(MainForm parent)
    {
        this.parent = parent;
        this.clientService = new ClientService();
        this.sellerService = new SellerService();
        this.products = new ArrayList<>();
        this.emission = new Date();

        lastSelectedClient = -1;
        lastSelectedSeller = -1;
        lastSelectedProduct = -1;

        initComponents();
        customSettings();
    }

    private void customSettings()
    {
        DefaultTableCellRenderer leftRenderer = new StripedTableCellRenderer(JLabel.LEFT);
        DefaultTableCellRenderer rightRenderer = new StripedTableCellRenderer(JLabel.RIGHT);

        productsTable.setDefaultRenderer(String.class, rightRenderer);
        productsTable.setShowGrid(false);
        productsTable.getTableHeader().setFont(new Font(Font.DIALOG, Font.PLAIN, 11));
        productsTable.getColumnModel().getColumn(1).setCellRenderer(leftRenderer);

        sellersTable.setDefaultRenderer(String.class, leftRenderer);
        sellersTable.setShowGrid(false);
        sellersTable.getTableHeader().setFont(new Font(Font.DIALOG, Font.PLAIN, 11));

        clientsTable.setDefaultRenderer(String.class, leftRenderer);
        clientsTable.setShowGrid(false);
        clientsTable.getTableHeader().setFont(new Font(Font.DIALOG, Font.PLAIN, 11));

        hideScrollPanels();

//        sellerRowSorter = new TableRowSorter<>(sellersTable.getModel());
//        clientRowSorter = new TableRowSorter<>(clientsTable.getModel());
        lblEmission.setText(DateUtil.format(emission, "dd/MM/yyyy HH:mm:ss"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        sellerScrollPane = new javax.swing.JScrollPane();
        sellersTable = new javax.swing.JTable();
        clientScrollPane = new javax.swing.JScrollPane();
        clientsTable = new javax.swing.JTable();
        formPane = new javax.swing.JPanel();
        lblExpirationDate = new javax.swing.JLabel();
        lblEmissionTitle = new javax.swing.JLabel();
        lblSellerTitle = new javax.swing.JLabel();
        lblClientTitle = new javax.swing.JLabel();
        lblEmission = new javax.swing.JLabel();
        lblSellerName = new javax.swing.JLabel();
        lblClientName = new javax.swing.JLabel();
        txtExpirationDate = new javax.swing.JFormattedTextField();
        lblQuerySeller = new javax.swing.JLabel();
        lblQueryClient = new javax.swing.JLabel();
        productsPane = new javax.swing.JPanel();
        productScrollPane = new javax.swing.JScrollPane();
        productsTable = new javax.swing.JTable();
        statusPanel = new javax.swing.JPanel();
        lblLine = new javax.swing.JLabel();
        lblSelectedLine = new javax.swing.JLabel();
        btnRemoveProduct = new javax.swing.JButton();
        btnAddProduct = new javax.swing.JButton();
        lblTotalPrice = new javax.swing.JLabel();
        controlPane = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Lançamento de Venda");
        addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(null);

        sellerScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        sellersTable.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        sellersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Código", "Descrição"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        sellersTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        sellersTable.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                sellersTableFocusLost(evt);
            }
        });
        sellersTable.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseReleased(java.awt.event.MouseEvent evt)
            {
                sellersTableMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                sellersTableMouseClicked(evt);
            }
        });
        sellersTable.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                sellersTableKeyPressed(evt);
            }
        });
        sellerScrollPane.setViewportView(sellersTable);
        if (sellersTable.getColumnModel().getColumnCount() > 0)
        {
            sellersTable.getColumnModel().getColumn(0).setMinWidth(60);
            sellersTable.getColumnModel().getColumn(0).setPreferredWidth(60);
            sellersTable.getColumnModel().getColumn(0).setMaxWidth(60);
        }

        getContentPane().add(sellerScrollPane);
        sellerScrollPane.setBounds(308, 64, 430, 140);

        clientScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        clientsTable.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        clientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Código", "Descrição"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        clientsTable.setAutoscrolls(false);
        clientsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        clientsTable.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseReleased(java.awt.event.MouseEvent evt)
            {
                clientsTableMouseReleased(evt);
            }
        });
        clientScrollPane.setViewportView(clientsTable);
        if (clientsTable.getColumnModel().getColumnCount() > 0)
        {
            clientsTable.getColumnModel().getColumn(0).setMinWidth(60);
            clientsTable.getColumnModel().getColumn(0).setPreferredWidth(60);
            clientsTable.getColumnModel().getColumn(0).setMaxWidth(60);
        }

        getContentPane().add(clientScrollPane);
        clientScrollPane.setBounds(30, 116, 460, 140);

        formPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(184, 207, 229)));
        formPane.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                formPaneMouseClicked(evt);
            }
        });

        lblExpirationDate.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblExpirationDate.setText("Data Vencimento");

        lblEmissionTitle.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblEmissionTitle.setText("Data/Hora Emissão");

        lblSellerTitle.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblSellerTitle.setText("Vendedor");

        lblClientTitle.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblClientTitle.setText("Cliente");

        lblEmission.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblEmission.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblEmission.setText("24/09/2018 13:03:23");
        lblEmission.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(184, 207, 229)), javax.swing.BorderFactory.createEmptyBorder(1, 4, 4, 1)));

        lblSellerName.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblSellerName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSellerName.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(184, 207, 229)), javax.swing.BorderFactory.createEmptyBorder(1, 4, 4, 1)));

        lblClientName.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblClientName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblClientName.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(184, 207, 229)), javax.swing.BorderFactory.createEmptyBorder(1, 4, 4, 1)));

        txtExpirationDate.setBackground(new java.awt.Color(231, 248, 240));
        try
        {
            txtExpirationDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex)
        {
            ex.printStackTrace();
        }
        txtExpirationDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtExpirationDate.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N

        lblQuerySeller.setBackground(new java.awt.Color(231, 248, 240));
        lblQuerySeller.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblQuerySeller.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblQuerySeller.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), javax.swing.BorderFactory.createEmptyBorder(1, 4, 4, 1)));
        lblQuerySeller.setOpaque(true);
        lblQuerySeller.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                lblQuerySellerMousePressed(evt);
            }
        });

        lblQueryClient.setBackground(new java.awt.Color(231, 248, 240));
        lblQueryClient.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lblQueryClient.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblQueryClient.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), javax.swing.BorderFactory.createEmptyBorder(1, 4, 4, 1)));
        lblQueryClient.setOpaque(true);
        lblQueryClient.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                lblQueryClientMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout formPaneLayout = new javax.swing.GroupLayout(formPane);
        formPane.setLayout(formPaneLayout);
        formPaneLayout.setHorizontalGroup(
            formPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPaneLayout.createSequentialGroup()
                        .addComponent(lblQueryClient, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblClientName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(formPaneLayout.createSequentialGroup()
                        .addGroup(formPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblClientTitle, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(formPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblEmission, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblEmissionTitle)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(formPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblExpirationDate)
                            .addComponent(txtExpirationDate, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(formPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(formPaneLayout.createSequentialGroup()
                                .addComponent(lblSellerTitle)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(formPaneLayout.createSequentialGroup()
                                .addComponent(lblQuerySeller, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSellerName, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        formPaneLayout.setVerticalGroup(
            formPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formPaneLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(formPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmissionTitle, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(formPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblExpirationDate)
                        .addComponent(lblSellerTitle)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPaneLayout.createSequentialGroup()
                        .addGroup(formPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmission, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(txtExpirationDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSellerName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6))
                    .addGroup(formPaneLayout.createSequentialGroup()
                        .addComponent(lblQuerySeller, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(lblClientTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblClientName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(formPaneLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblQueryClient, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12))
        );

        getContentPane().add(formPane);
        formPane.setBounds(12, 12, 848, 117);

        productsPane.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(184, 207, 229)), "Produtos"));
        productsPane.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                productsPaneMouseClicked(evt);
            }
        });

        productScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        productScrollPane.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                productScrollPaneMouseClicked(evt);
            }
        });

        productsTable.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        productsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Código", "Descrição", "Embalagem", "Quantidade", "Preço Venda", "Desconto (%)", "Valor Liquido", "Valor Total"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        productsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        productsTable.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseReleased(java.awt.event.MouseEvent evt)
            {
                productsTableMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                productsTableMouseClicked(evt);
            }
        });
        productScrollPane.setViewportView(productsTable);
        if (productsTable.getColumnModel().getColumnCount() > 0)
        {
            productsTable.getColumnModel().getColumn(0).setMinWidth(60);
            productsTable.getColumnModel().getColumn(0).setPreferredWidth(60);
            productsTable.getColumnModel().getColumn(0).setMaxWidth(60);
            productsTable.getColumnModel().getColumn(1).setMinWidth(290);
            productsTable.getColumnModel().getColumn(1).setPreferredWidth(300);
            productsTable.getColumnModel().getColumn(1).setMaxWidth(350);
            productsTable.getColumnModel().getColumn(2).setMinWidth(100);
            productsTable.getColumnModel().getColumn(2).setPreferredWidth(120);
            productsTable.getColumnModel().getColumn(2).setMaxWidth(150);
            productsTable.getColumnModel().getColumn(3).setMinWidth(100);
            productsTable.getColumnModel().getColumn(3).setPreferredWidth(120);
            productsTable.getColumnModel().getColumn(3).setMaxWidth(150);
            productsTable.getColumnModel().getColumn(4).setMinWidth(100);
            productsTable.getColumnModel().getColumn(4).setPreferredWidth(120);
            productsTable.getColumnModel().getColumn(4).setMaxWidth(150);
            productsTable.getColumnModel().getColumn(5).setMinWidth(110);
            productsTable.getColumnModel().getColumn(5).setPreferredWidth(130);
            productsTable.getColumnModel().getColumn(5).setMaxWidth(160);
            productsTable.getColumnModel().getColumn(6).setMinWidth(110);
            productsTable.getColumnModel().getColumn(6).setPreferredWidth(130);
            productsTable.getColumnModel().getColumn(6).setMaxWidth(160);
            productsTable.getColumnModel().getColumn(7).setMinWidth(100);
            productsTable.getColumnModel().getColumn(7).setPreferredWidth(120);
            productsTable.getColumnModel().getColumn(7).setMaxWidth(150);
        }

        statusPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lblLine.setFont(new java.awt.Font("Noto Sans", 0, 11)); // NOI18N
        lblLine.setText("Linha:");

        lblSelectedLine.setFont(new java.awt.Font("Noto Sans", 0, 11)); // NOI18N
        lblSelectedLine.setText("0/0");

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSelectedLine, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLine)
                    .addComponent(lblSelectedLine))
                .addGap(0, 0, 0))
        );

        btnRemoveProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/vrfortaleza/upextension/resources/document-remove-icon.png"))); // NOI18N
        btnRemoveProduct.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnRemoveProductActionPerformed(evt);
            }
        });

        btnAddProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/vrfortaleza/upextension/resources/document-add-icon.png"))); // NOI18N
        btnAddProduct.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddProductActionPerformed(evt);
            }
        });

        lblTotalPrice.setFont(new java.awt.Font("Noto Sans", 1, 11)); // NOI18N

        javax.swing.GroupLayout productsPaneLayout = new javax.swing.GroupLayout(productsPane);
        productsPane.setLayout(productsPaneLayout);
        productsPaneLayout.setHorizontalGroup(
            productsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productsPaneLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(productsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(productsPaneLayout.createSequentialGroup()
                        .addComponent(lblTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(productsPaneLayout.createSequentialGroup()
                        .addComponent(statusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(productScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 826, Short.MAX_VALUE))
                .addGap(6, 6, 6))
        );
        productsPaneLayout.setVerticalGroup(
            productsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productsPaneLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(productScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(productsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(productsPaneLayout.createSequentialGroup()
                        .addComponent(btnAddProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnRemoveProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lblTotalPrice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(3, 3, 3))
        );

        getContentPane().add(productsPane);
        productsPane.setBounds(12, 135, 848, 274);

        controlPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(184, 207, 229)));

        btnSave.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/vrfortaleza/upextension/resources/save-icon.png"))); // NOI18N
        btnSave.setText("Salvar");

        btnExit.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/vrfortaleza/upextension/resources/close-button-icon.png"))); // NOI18N
        btnExit.setText("Sair");
        btnExit.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlPaneLayout = new javax.swing.GroupLayout(controlPane);
        controlPane.setLayout(controlPaneLayout);
        controlPaneLayout.setHorizontalGroup(
            controlPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        controlPaneLayout.setVerticalGroup(
            controlPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPaneLayout.createSequentialGroup()
                .addGroup(controlPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnExit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        getContentPane().add(controlPane);
        controlPane.setBounds(12, 415, 848, 28);

        setBounds(200, 20, 883, 484);
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnExitActionPerformed
    {//GEN-HEADEREND:event_btnExitActionPerformed
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnAddProductActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAddProductActionPerformed
    {//GEN-HEADEREND:event_btnAddProductActionPerformed
        if (selectedSeller == null) {
            JOptionPane.showMessageDialog(this, "Vendedor não informado", "Lançamento de Venda", JOptionPane.WARNING_MESSAGE);
            return;
        }

        LaunchSaleProductForm form = new LaunchSaleProductForm(this, null);
        this.getDesktopPane().add(form);
        form.setVisible(true);
    }//GEN-LAST:event_btnAddProductActionPerformed

    private void btnRemoveProductActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnRemoveProductActionPerformed
    {//GEN-HEADEREND:event_btnRemoveProductActionPerformed
        int selected = productsTable.getSelectedRow();

        if (selected >= 0) {
            Object[] choices = {"Sim", "Não"};
            Object defaultChoice = choices[1];

            if (JOptionPane.showOptionDialog(this, "Confirma exclusão?", "Lançamento de Venda", JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE, null, choices, defaultChoice) == 0) {
                removeProduct();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nenhum item selecionado!", "Lançamento de Venda", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoveProductActionPerformed

    private void lblQuerySellerMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_lblQuerySellerMousePressed
    {//GEN-HEADEREND:event_lblQuerySellerMousePressed
        getSellers();
        sellerScrollPane.setVisible(true);
    }//GEN-LAST:event_lblQuerySellerMousePressed

    private void lblQueryClientMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_lblQueryClientMouseClicked
    {//GEN-HEADEREND:event_lblQueryClientMouseClicked
        getClients();
        clientScrollPane.setVisible(true);
    }//GEN-LAST:event_lblQueryClientMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_formMouseClicked
    {//GEN-HEADEREND:event_formMouseClicked
        hideScrollPanels();
    }//GEN-LAST:event_formMouseClicked

    private void formPaneMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_formPaneMouseClicked
    {//GEN-HEADEREND:event_formPaneMouseClicked
        hideScrollPanels();
    }//GEN-LAST:event_formPaneMouseClicked

    private void sellersTableFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_sellersTableFocusLost
    {//GEN-HEADEREND:event_sellersTableFocusLost

    }//GEN-LAST:event_sellersTableFocusLost

    private void productsPaneMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_productsPaneMouseClicked
    {//GEN-HEADEREND:event_productsPaneMouseClicked
        hideScrollPanels();
    }//GEN-LAST:event_productsPaneMouseClicked

    private void productsTableMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_productsTableMouseClicked
    {//GEN-HEADEREND:event_productsTableMouseClicked
        hideScrollPanels();
    }//GEN-LAST:event_productsTableMouseClicked

    private void productScrollPaneMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_productScrollPaneMouseClicked
    {//GEN-HEADEREND:event_productScrollPaneMouseClicked
        hideScrollPanels();
    }//GEN-LAST:event_productScrollPaneMouseClicked

    private void sellersTableMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_sellersTableMouseClicked
    {//GEN-HEADEREND:event_sellersTableMouseClicked
    }//GEN-LAST:event_sellersTableMouseClicked

    private void sellersTableMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_sellersTableMouseReleased
    {//GEN-HEADEREND:event_sellersTableMouseReleased
        int selectedRow = sellersTable.getSelectedRow();

        if (lastSelectedSeller == selectedRow) {
            selectSeller(selectedRow);
        }

        lastSelectedSeller = selectedRow;
    }//GEN-LAST:event_sellersTableMouseReleased

    private void clientsTableMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_clientsTableMouseReleased
    {//GEN-HEADEREND:event_clientsTableMouseReleased
        int selectedRow = clientsTable.getSelectedRow();

        if (lastSelectedClient == selectedRow) {
            selectClient(selectedRow);
        }

        lastSelectedClient = selectedRow;
    }//GEN-LAST:event_clientsTableMouseReleased

    private void sellersTableKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_sellersTableKeyPressed
    {//GEN-HEADEREND:event_sellersTableKeyPressed
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_ENTER:
                selectSeller(sellersTable.getSelectedRow());
                break;
        }
    }//GEN-LAST:event_sellersTableKeyPressed

    private void productsTableMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_productsTableMouseReleased
    {//GEN-HEADEREND:event_productsTableMouseReleased
        int selectedRow = productsTable.getSelectedRow();

        if (lastSelectedProduct == selectedRow) {
            selectProduct(selectedRow);
        }

        lastSelectedProduct = selectedRow;
    }//GEN-LAST:event_productsTableMouseReleased

    private void selectSeller(int selectedRow)
    {
        selectedSeller = ViewUtil.getEntityFromTable(selectedRow, sellersTable, sellers);

        if (selectedSeller != null) {
            lblQuerySeller.setText(NumberUtil.fixedDigits(6, String.valueOf(selectedSeller.getId())));
            lblSellerName.setText(selectedSeller.getName());
            selectedClient = null;
            lblClientName.setText("");
            lblQueryClient.setText("");
        }
    }

    private void selectClient(int selectedRow)
    {
        selectedClient = ViewUtil.getEntityFromTable(selectedRow, clientsTable, clients);

        if (selectedClient != null) {
            lblQueryClient.setText(NumberUtil.fixedDigits(6, String.valueOf(selectedClient.getId())));
            lblClientName.setText(selectedClient.getName());
        }
    }

    public void selectProduct(int selectedRow)
    {
        Product product = this.products.get(selectedRow);
        LaunchSaleProductForm form = new LaunchSaleProductForm(this, product);
        this.getDesktopPane().add(form);
        form.setVisible(true);
    }

    private void hideScrollPanels()
    {
        sellerScrollPane.setVisible(false);
        clientScrollPane.setVisible(false);
    }

    private void getSellers()
    {
        this.sellers = sellerService.all();
        DefaultTableModel model = (DefaultTableModel) sellersTable.getModel();

        if (!model.getDataVector().isEmpty()) {
            model.getDataVector().removeAllElements();
        }

        for (Seller seller : sellers) {
            String[] row = new String[2];
            row[0] = NumberUtil.fixedDigits(6, String.valueOf(seller.getId()));
            row[1] = seller.getName();
            model.addRow(row);
        }
    }

    private void getClients()
    {
        if (selectedSeller != null) {
            this.clients = clientService.allBySellers(selectedSeller);

            DefaultTableModel model = (DefaultTableModel) clientsTable.getModel();

            if (!model.getDataVector().isEmpty()) {
                model.getDataVector().removeAllElements();
            }

            for (Client client : clients) {
                String[] row = new String[2];
                row[0] = NumberUtil.fixedDigits(6, String.valueOf(client.getId()));
                row[1] = client.getName();
                model.addRow(row);
            }
        }
    }

    public void addProduct(Product product)
    {
        this.products.add(product);
        DefaultTableModel model = (DefaultTableModel) productsTable.getModel();

        String[] row = new String[8];
        row[0] = NumberUtil.fixedDigits(6, String.valueOf(product.getId()));
        row[1] = product.getDescription();
        row[2] = NumberUtil.fixedDigits(4, String.valueOf(product.getQtyWrapper()));
        row[3] = String.valueOf(product.getQuantity());
        row[4] = product.getRetailPrice();
        row[5] = product.getDiscount();
        row[6] = product.getWholeSalePrice();
        row[7] = product.getTotalPrice();

        model.addRow(row);

        updateTotalPrice();
    }

    public void removeProduct()
    {
        DefaultTableModel model = (DefaultTableModel) productsTable.getModel();
        products.remove(productsTable.getSelectedRow());
        model.removeRow(productsTable.getSelectedRow());

        updateTotalPrice();
    }

    public boolean contains(Product product)
    {
        for (Product p : products) {
            if (product.getId() == p.getId()) {
                return true;
            }
        }

        return false;
    }

    private void updateTotalPrice()
    {
        double totalPrice = 0;
        for (Product product : products) {
            totalPrice += NumberUtil.toDouble(product.getTotalPrice());
        }

        lblTotalPrice.setText("Valor Total: " + NumberUtil.convertCurrencyFormat(totalPrice));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProduct;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnRemoveProduct;
    private javax.swing.JButton btnSave;
    private javax.swing.JScrollPane clientScrollPane;
    private javax.swing.JTable clientsTable;
    private javax.swing.JPanel controlPane;
    private javax.swing.JPanel formPane;
    private javax.swing.JLabel lblClientName;
    private javax.swing.JLabel lblClientTitle;
    private javax.swing.JLabel lblEmission;
    private javax.swing.JLabel lblEmissionTitle;
    private javax.swing.JLabel lblExpirationDate;
    private javax.swing.JLabel lblLine;
    private javax.swing.JLabel lblQueryClient;
    private javax.swing.JLabel lblQuerySeller;
    private javax.swing.JLabel lblSelectedLine;
    private javax.swing.JLabel lblSellerName;
    private javax.swing.JLabel lblSellerTitle;
    private javax.swing.JLabel lblTotalPrice;
    private javax.swing.JScrollPane productScrollPane;
    private javax.swing.JPanel productsPane;
    private javax.swing.JTable productsTable;
    private javax.swing.JScrollPane sellerScrollPane;
    private javax.swing.JTable sellersTable;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JFormattedTextField txtExpirationDate;
    // End of variables declaration//GEN-END:variables
}
